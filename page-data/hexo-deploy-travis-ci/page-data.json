{"componentChunkName":"component---src-templates-blog-post-js","path":"/hexo-deploy-travis-ci/","result":{"data":{"site":{"siteMetadata":{"title":"GoodGoodMan's blog"}},"markdownRemark":{"id":"8dc2228f-d953-5fe8-944e-69016bc5f54b","excerpt":"Hexo와 NEXT 테마를 사용하는 블로그 시작. 포스트에 언급한대로, 나는 PC의 포맷이 잦고, 여러 기기에서 작업을 하는지라 (이곳 저곳 돌아다니면서 작업하는 것을 좋아하기 때문에)  프로젝트 자체를 깃헙 레포에 올려놓고 그때 그때 Clone || Pull…","html":"<p><a href=\"/create-blog-by-hexo\">Hexo와 NEXT 테마를 사용하는 블로그 시작.</a> 포스트에 언급한대로, 나는 PC의 포맷이 잦고, 여러 기기에서 작업을 하는지라 (이곳 저곳 돌아다니면서 작업하는 것을 좋아하기 때문에) <code class=\"language-text\">Hexo</code> 프로젝트 자체를 깃헙 레포에 올려놓고 그때 그때 Clone || Pull 받아 포스트를 작성한다.</p>\n<p>이렇게 작업하던 중 page의 레포지토리의 commit이 계속해서 증발하는 현상을 발견했고, 검색 후에 이러한 현상이 새 프로젝트로 clone받아 deploy할때 발생한다는 것을 알게되었다.</p>\n<p><code class=\"language-text\">Hexo</code>에서 고쳐줄 생각은 없어보이고, 나 또한 고쳐서 쓸 생각이 없었다. 그 중, CI/CD 로 <code class=\"language-text\">Hexo</code> 레포지토리에 푸시할때마다 자동으로 deploy 하게 하면 commit이 증발할 일이 없을거 같다는 생각이 들었다.</p>\n<p>사실 중간부턴 커밋 로그가 증발한다는 문제보다, 그냥 CI/CD 붙이면 편할거 같다는 생각때문에 작업했다.</p>\n<h2>CI/CD</h2>\n<p><code class=\"language-text\">Hexo</code>레포지토리에는 Deploy를 위한 정보들이 들어갈 수 있으므로, private으로 하고싶었다. 때문에 <code class=\"language-text\">UDG</code>개발에 주로 사용하던 <code class=\"language-text\">Gitlab</code>에서 <code class=\"language-text\">GitlabRunner</code>로 CI/CD를 하려 했었다.</p>\n<p>하지만 문서 작성 중, 막상 설정을 뒤져보니 새 환경에서 <code class=\"language-text\">git push</code>시 <code class=\"language-text\">Github</code>에 로그인 해야하는 부분 말고는 그다지 private한 정보가 없었고 환경변수로 <code class=\"language-text\">GithubToken</code>따위를 넘겨서 인증을 하면 될거같다는 점에서 그냥 <code class=\"language-text\">Travis-CI</code>를 이용하면 될거 같다는 생각이 들어 <code class=\"language-text\">Github + Travis-CI</code>의 조합을 밀어 사용하기로 마음먹었다.</p>\n<p>때문에 <code class=\"language-text\">Travis-CI</code>를 사용하여 비슷한 처리를 하는것을 구글링하였고, 아니나 다를까 <a href=\"https://e.printstacktrace.blog/hexo-git-deployer-removes-commits-history-lets-do-something-about-that/\">더이상 좋게 쓰지 못할정도로 잘 설명된 문서</a>를 발견했다.</p>\n<p>위 문서때문에 더이상 문서를 쓸 필요는 없겠지만, 지워진 <code class=\"language-text\">hexo-deploy-with-gitlab-ci</code>문서를 기리기 위해서라도 문서를 마무리 지어야겠다.</p>\n<h3>Travis-CI</h3>\n<p>내가 <code class=\"language-text\">Travis-CI</code>에게 요구할 기능은 간단하다.</p>\n<ol>\n<li><code class=\"language-text\">edit</code> branch에 푸시할 경우, 자동으로 스크립트에 따라 빌드하는것.</li>\n<li>빌드된 결과를 <code class=\"language-text\">hexo deploy</code>하여 <code class=\"language-text\">master</code> branch에 푸시하는 것.</li>\n</ol>\n<p>위 내용에 대한 아래의 build script와 <code class=\"language-text\">.travis.yml</code>를 추가한다음 커밋을 하면 끝이다.</p>\n<p><code class=\"language-text\">deploy.sh</code></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n\n<span class=\"token comment\"># Initialize target with currently deployed files</span>\n<span class=\"token function\">git</span> clone --depth <span class=\"token number\">1</span> --branch<span class=\"token operator\">=</span>master https://github.com/GoodGoodJM/GoodGoodJM.github.io.git .deploy_git\n\n<span class=\"token builtin class-name\">cd</span> .deploy_git\n\n<span class=\"token comment\"># Remove all files before they get copied from ../public/</span>\n<span class=\"token comment\"># so git can track files that were removed in the last commit</span>\n<span class=\"token function\">find</span> <span class=\"token builtin class-name\">.</span> -path ./.git -prune -o -exec <span class=\"token function\">rm</span> -rf <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">\\</span><span class=\"token punctuation\">;</span> <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span> /dev/null\n\n<span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span>/\n\n<span class=\"token comment\"># Run deployment</span>\nhexo clean\nhexo deploy</code></pre></div>\n<p><code class=\"language-text\">.travis.yml</code></p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">language</span><span class=\"token punctuation\">:</span> node_js\n\n<span class=\"token key atrule\">node_js</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token string\">\"6\"</span>\n\n<span class=\"token key atrule\">cache</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">directories</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> node_modules\n\n<span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">only</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> edit\n\n<span class=\"token key atrule\">before_install</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> npm install hexo<span class=\"token punctuation\">-</span>cli <span class=\"token punctuation\">-</span>g\n  <span class=\"token punctuation\">-</span> npm install hexo <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>save\n  <span class=\"token punctuation\">-</span> npm install\n\n<span class=\"token key atrule\">before_script</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> git config <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>global user.name 'Travis CI'\n  <span class=\"token punctuation\">-</span> git config <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>global user.email 'bot@travis<span class=\"token punctuation\">-</span>ci.org'\n  <span class=\"token punctuation\">-</span> sed <span class=\"token punctuation\">-</span>i'' \"s~https<span class=\"token punctuation\">:</span>//github.com/GoodGoodJM/GoodGoodJM.github.io.git~https<span class=\"token punctuation\">:</span>//$<span class=\"token punctuation\">{</span>GH_TOKEN<span class=\"token punctuation\">}</span><span class=\"token punctuation\">:</span>x<span class=\"token punctuation\">-</span>oauth<span class=\"token punctuation\">-</span>basic@github.com/goodgoodjm/GoodGoodJM.github.io.git~\" _config.yml <span class=\"token comment\"># 주의!</span>\n\n<span class=\"token key atrule\">script</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> hexo generate\n\n<span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">skip_cleanup</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">provider</span><span class=\"token punctuation\">:</span> script\n  <span class=\"token key atrule\">script</span><span class=\"token punctuation\">:</span> sh deploy.sh\n  <span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> edit</code></pre></div>\n<p><code class=\"language-text\">npm install -g</code>는 쓰지않는 성격이지만 어차피 나의 머신이 아니라 관심 없고, 원작자를 존중하기 위해 그냥 사용했다.</p>\n<p><code class=\"language-text\">before_script</code>의 맨 아래 커맨드(<code class=\"language-text\"># 주의!</code> 주석이 달린 부분)은, <code class=\"language-text\">sed</code>라는 명령어를 이용하여 문자열을 치환해주는 명령이다. 본인의 <code class=\"language-text\">_config.yml</code>의 <code class=\"language-text\">deploy.repo</code> 값이 <code class=\"language-text\">https://github.com/GoodGoodJM/GoodGoodJM.github.io.git</code>으로 되어있기 때문에 위 같이 작성하였는데, <code class=\"language-text\">~{origin_url}~{changed_url}~</code>의 <code class=\"language-text\">origin_url</code> 부분에 자신의 <code class=\"language-text\">deploy.repo</code>에 지정된 url을 추가해주면 된다. <code class=\"language-text\">changed_url</code>의 <code class=\"language-text\">${GH_TOKEN}</code>은 <code class=\"language-text\">Travis-CI</code>의 환경변수에 <code class=\"language-text\">GH_TOKEN</code>을 추가해 주어야 한다.</p>\n<p>환경변수 설정은 <code class=\"language-text\">Travis-CI</code>에서 레포지토리를 지정한 다음, setting에서 변경할 수 있으며, Token은 <a href=\"https://github.com/settings/tokens\">해당 페이지</a>에서 발급 받을 수 있다.</p>\n<p>이후 <code class=\"language-text\">Travis-CI</code>를 레포지토리에 붙인 뒤, 이후 edit 브랜치에 푸시를 할 때 마다 제대로 갱신되는지 확인해 주면 된다.</p>\n<p><img src=\"https://i.imgur.com/C6Icwvv.png\" alt=\"success\"></p>\n<hr>\n<h2>참고문서</h2>\n<ul>\n<li><a href=\"https://e.printstacktrace.blog/hexo-git-deployer-removes-commits-history-lets-do-something-about-that/\">Hexo git deployer removes commits history? Let’s do something about that!</a></li>\n<li><a href=\"https://withcoding.com/97\">리눅스 find 명령어 사용법 정리 (파일, 디렉토리 검색, 찾기)</a></li>\n</ul>","frontmatter":{"title":"Travis-CI로 Hexo블로그 Deploy 자동화 하기","date":"May 12, 2019","description":null}},"previous":{"fields":{"slug":"/disqus-with-hexo-next/"},"frontmatter":{"title":"Hexo NEXT 템플릿 블로그에 Disqus 댓글 기능 추가하기"}},"next":{"fields":{"slug":"/log-20190612/"},"frontmatter":{"title":"log-20190612"}}},"pageContext":{"id":"8dc2228f-d953-5fe8-944e-69016bc5f54b","previousPostId":"079fcc36-c246-5b2c-ac49-24df779de3c3","nextPostId":"fbde7810-306e-599f-b8e9-8a3cee55901a"}},"staticQueryHashes":["2241071305","2841359383"]}